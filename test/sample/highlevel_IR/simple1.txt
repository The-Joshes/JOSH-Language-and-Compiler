// 1) Create Module and Profile
Module *m = new Module(new Linux_x86_64());

// 2) Create all global values
Type *intType = NumericType::getInt(INT, m);
GlobalValue *xAddr = GlobalValue::CreateVariable(1, intType, m);

// 3) Create all functions
Type *mainType = FunctionType::Create(intType);
Function *f = Function::Create(m, mainType);
m->setMainFunction(f);

// 4) Start creating function; add instructions to bb until we reach a TerminatorInst
BasicBlock *bb = BasicBlock::Create(f);
f->setEntryPoint(bb);

GlobalValue *four = GlobalValue::CreateConstant(4, intType);   // y = 4
Instruction *x = LoadInst::Create(xAddr, bb);                  // x = *xAddr
Instruction *newX = ArithmeticInst::Create(ADD, four, x, bb);     // x = y + x
Instruction *storeX = StoreInst::Create(newX, xAddr, bb);      // *xAddr = x
TerminatorInst::CreateReturn(returnVal, bb);                   // return x
